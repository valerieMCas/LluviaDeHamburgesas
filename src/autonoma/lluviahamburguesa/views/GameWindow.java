package autonoma.lluviahamburguesa.views;

import autonoma.lluviahamburguesa.models.FoodField;
import gamebase.elements.GraphicContainer;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;

/**
 *
 * @author marti
 */
public class GameWindow extends javax.swing.JFrame implements GraphicContainer {

    public static final int _WIDTH = 850;
    public static final int _HEIGHT = 550;
    private FoodField foodField;
    // Double Buffer
    private BufferedImage imagenBuffer;
    private Graphics gImagenBuffer;

    /**
     * Creates new form GameWindow
     */
    public GameWindow(FoodField f) {
        foodField = f;
        initComponents();

        this.setLocationRelativeTo(null);

        this.setSize(_WIDTH, _HEIGHT);

        // Crear la imagen y cargarla en memoria
        this.imagenBuffer = new BufferedImage(_WIDTH, _HEIGHT,
                BufferedImage.TYPE_INT_RGB);

        this.gImagenBuffer = this.imagenBuffer.getGraphics();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_Q) {
            System.exit(0);
        }
    }//GEN-LAST:event_formKeyPressed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

    }//GEN-LAST:event_formMouseClicked

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered

    }//GEN-LAST:event_formMouseEntered

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseMoved

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        System.out.println("¡Clic detectado!");
        if (foodField != null) {
            foodField.handleClick(evt.getPoint());
            foodField.refresh();
            repaint();
        }
    }//GEN-LAST:event_formMousePressed
    public void setFoodField(FoodField foodField) {
        this.foodField = foodField;
    }

    @Override
    public void update(Graphics g) {
        // Fondo color cielo azul claro
        gImagenBuffer.setColor(new Color(135, 206, 235));
        gImagenBuffer.fillRect(0, 0, getWidth(), getHeight());

        // Pintar el FoodField encima del fondo
        if (foodField != null) {
            foodField.paint(gImagenBuffer);
            if (foodField.getPlayer() != null) {
                gImagenBuffer.setColor(Color.BLACK);
                gImagenBuffer.drawString("Puntaje: " + foodField.getPlayer().getPuntaje(), 20, 50);
            }
        }

        // Finalmente dibuja la imagen completa en pantalla
        g.drawImage(imagenBuffer, 0, 0, this);
    }

    @Override
    public void paint(Graphics g) {
        update(g);
    }

    @Override
    public Rectangle getBordes() {
        return new Rectangle(WIDTH, HEIGHT);
    }

    /**
     * Refresca la interfaz gráfica de la ventana del juego.
     */
    @Override
    public void refresh() {
        this.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
